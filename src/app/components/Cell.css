:root {
  --game-inner-border: 2px solid var(--border-color);
  --game-border: 3px solid var(--border-color);
  --game-columns: 9;
  --game-cell-size: calc(100% / var(--game-columns));
}

/* .border-left::after {
  background-color: var(--border-color);
  bottom: 0;
  content: '';
  left: 0;
  position: absolute;
  top: 0;
  width: 0.5px;
} */

.gcb {
  background-color: var(--white);
  border: 0.5px solid var(--border-color);
}
.gcb.ibb {
  border-bottom: var(--game-inner-border);
}
.gcb.ibr {
  border-right: var(--game-inner-border);
}
.gcb.obt {
  border-top: var(--game-border);
}
.gcb.obb {
  border-bottom: var(--game-border);
}
.gcb.obl {
  border-left: var(--game-border);
}
.gcb.obr {
  border-right: var(--game-border);
}

.gcb {
  align-items: center;
  aspect-ratio: 1;
  display: flex;
  height: var(--game-cell-size);
  justify-content: center;
  position: relative;
  width: var(--game-cell-size);
}

.gc {
  align-items: center;
  display: flex;
  height: 100%;
  justify-content: center;
  position: relative;
  width: 100%;
}

.game-control {
  align-items: center;
  display: flex;
  justify-content: center;
  position: relative;
}

.gc.incorrect::after {
  background-color: var(--error-color);
  content: '';
  height: 2px;
  left: 50%;
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%) rotate(-45deg);
  width: 150%;
}

.gc.highlight > .token {
  border: 1px solid var(--lowlight-color);
}

.gc.selected > .token,
.gc.same-value > .token {
  /* transform: scale(0.85); */
}

.gc.same-value > .token {
  border: 1px solid currentColor;
  padding: 2px;
}

.gc.empty > .token::before {
  background-color: transparent;
}

.gcb.locked {
  background-color: var(--locked);
}
.gcb.highlight,
.gcb.same-value {
  background-color: var(--lowlight-color);
}
.gcb.selected {
  background-color: var(--highlight-color);
}
.gc.selected > .token {
  border: 1px solid var(--highlight-color);
}

.gc.empty .token {
  transition: none;
}
